/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-04-29 08:31:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Sample.SearchServlet;

public final class Download_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Sample.SearchServlet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function download(){\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form action=\"DownloadServlet\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");

		String userID = session.getAttribute("user_id").toString();
		System.out.println("User ID = " + userID);
		session.setAttribute("user_id", userID);
                

  String kw= session.getAttribute("keyw").toString();
  

System.out.println("mmmmmmmmmmmmmm"+kw);
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p1.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> The File Information Tool Set (FITS) identifies, validates and extracts technical metadata for a wide range of file formats. <br/>It acts as a wrapper, invoking and managing the output from several other open source tools. Output from these tools are converted into<br/> a common format, compared to one another and consolidated into a ...\r\n");
      out.write("        </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p2.jsp\" style=\"color:blue\"> Retrieving File Information | Android Developers\r\n");
      out.write("\r\n");
      out.write("        <p style=\"color:black\"> https://developer.android.com/training/secure-file-sharing/retrieve-info.html\r\n");
      out.write("Before a client app tries to work with a file for which it has a content URI, the app can request information about the file from the server app, including the file's data type and file size. The data type helps the client app to determine if it can handle the file, and the file size helps the client app set up buffering and caching for the ...   </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p3.jsp\" style=\"color:blue\"> Obtain important file information with these PHP file functions ...\r\n");
      out.write("        <p style=\"color:black\">https://www.techrepublic.com/.../obtain-important-file-information-with-these-php-fil...\r\n");
      out.write("Jan 30, 2006 - This document lists every PHP file function a Web developer will ever need.</p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p4.jsp\" style=\"color:blue\">Print File Information - Finding Files - GNU.org\r\n");
      out.write("        <p style=\"color:black\"> https://www.gnu.org/software/findutils/manual/html.../Print-File-Information.html\r\n");
      out.write("3.2 Print File Information. ? Action: -ls. True; list the current file in ' ls -dils ' format on the standard output. The output looks like this: 204744 17 -rw-r--r-- 1 djm staff 17337 Nov 2 1992 ./lwall-quotes. The fields are: The inode number of the file. See Hard Links, for how to find files based on their inode number. the number of ...</p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p5.jsp\" style=\"color:blue\">How to file Info - Competition Commission of India\r\n");
      out.write("\r\n");
      out.write("        <p style=\"color:black\"> www.cci.gov.in/sites/default/files/advocacy_booklet.../How%20to%20file%20Info.pdf\r\n");
      out.write("by A SERIES\r\n");
      out.write("WHO CAN FILE THE INFORMATION ? * Any person, consumer or their association or trade association can file information before the Commission. Central Govt. or a State Govt. or a statutory authority can also make a reference to the Commission for making an inquiry. ?Person? includes an individual, Hindu Undivided.  </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p6.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> The File Information Tool Set (FITS) identifies, validates and extracts technical metadata for a wide range of file formats. <br/>It acts as a wrapper, invoking and managing the output from several other open source tools. Output from these tools are converted into<br/> a common format, compared to one another and consolidated into a ...\r\n");
      out.write("        </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Data Structure") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p7.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> www.cci.gov.in/sites/default/files/advocacy_booklet.../How%20to%20file%20Info.pdf\r\n");
      out.write("by A SERIES\r\n");
      out.write("WHO CAN FILE THE INFORMATION ? * Any person, consumer or their association or trade association can file information before the Commission. Central Govt. or a State Govt. or a statutory authority can also make a reference to the Commission for making an inquiry. ?Person? includes an individual, Hindu Undivided.  </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p8.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> The File Information Tool Set (FITS) identifies, validates and extracts technical metadata for a wide range of file formats. <br/>It acts as a wrapper, invoking and managing the output from several other open source tools. Output from these tools are converted into<br/> a common format, compared to one another and consolidated into a ...\r\n");
      out.write("        </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p9.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> The File Information Tool Set (FITS) identifies, validates and extracts technical metadata for a wide range of file formats. <br/>It acts as a wrapper, invoking and managing the output from several other open source tools. Output from these tools are converted into<br/> a common format, compared to one another and consolidated into a ...\r\n");
      out.write("        </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write("\r\n");
      out.write("  ");
  if(kw.equalsIgnoreCase("file")|| kw.equalsIgnoreCase("Information") ||kw.equalsIgnoreCase("Validates") ||kw.equalsIgnoreCase("what is file?")
          || kw.equalsIgnoreCase("data") ||kw.equalsIgnoreCase("directory")||kw.equalsIgnoreCase("metadata")) 
    { 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("    <a href=\"p10.jsp\" style=\"color:blue\"> File Information Tool Set (FITS) - Projects at Harvard\r\n");
      out.write("        <p style=\"color:black\"> www.cci.gov.in/sites/default/files/advocacy_booklet.../How%20to%20file%20Info.pdf\r\n");
      out.write("by A SERIES\r\n");
      out.write("WHO CAN FILE THE INFORMATION ? * Any person, consumer or their association or trade association can file information before the Commission. Central Govt. or a State Govt. or a statutory authority can also make a reference to the Commission for making an inquiry. ?Person? includes an individual, Hindu Undivided. </p> </a>       \r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            ");

    }
  
  
  
      out.write(" \r\n");
      out.write("<center>\r\n");
      out.write("  <h3 style=\"color:blue\">Download The Files</h3>\r\n");
      out.write("  \r\n");
      out.write("  How do you rate the Material\r\n");
      out.write("\t\r\n");
      out.write("\t<table style=\"color:blue\" border=\"2\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>File Name</td>\r\n");
      out.write("\t\t\t<td>Feedback</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

		System.out.println("---********="+SearchServlet.filenameset);
			for(String c : SearchServlet.filenameset)
                        {
			
				String fileName = c;
                                
        System.out.println("---********="+c);
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td>");
      out.print(fileName);
      out.write("</td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<INPUT TYPE=\"radio\" NAME=\"rating");
      out.print(fileName);
      out.write("\" VALUE = \"poor\"> Poor<br/> \r\n");
      out.write("\t\t\t<INPUT TYPE=\"radio\" NAME=\"rating");
      out.print(fileName);
      out.write("\" VALUE = \"good\"> Good <br/>\r\n");
      out.write("\t\t\t<INPUT TYPE=\"radio\" NAME=\"rating");
      out.print(fileName);
      out.write("\" VALUE=\"very good\" CHECKED> Very Good <br/>\r\n");
      out.write("\t\t\t<INPUT TYPE=\"radio\" NAME=\"rating");
      out.print(fileName);
      out.write("\" VALUE = \"excellent\"> Excellent\t<br/>\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td><input onclick= \"download()\" type=\"submit\" value=\"Download\">Download</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write(" \r\n");
      out.write("<BR><BR>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  </center>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
